<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
	xmlns="http://www.springframework.org/schema/beans"   
	xmlns:aop="http://www.springframework.org/schema/aop"  
	xmlns:context="http://www.springframework.org/schema/context"   
	xmlns:tx="http://www.springframework.org/schema/tx"  
	xmlns:cache="http://www.springframework.org/schema/cache"   
	xmlns:p="http://www.springframework.org/schema/p"  
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
	http://www.springframework.org/schema/beans/spring-beans-4.3.xsd  
	http://www.springframework.org/schema/aop  
	http://www.springframework.org/schema/aop/spring-aop-4.3.xsd  
	http://www.springframework.org/schema/context  
	http://www.springframework.org/schema/context/spring-context-4.3.xsd  
	http://www.springframework.org/schema/tx  
	http://www.springframework.org/schema/tx/spring-tx-4.3.xsd  
	http://www.springframework.org/schema/cache   
	http://www.springframework.org/schema/cache/spring-cache-4.3.xsd">  
  	
  	<!-- JNDI方式配置数据源 -->
    <!-- <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> <property name="jndiName" value="${jndiName}"></property> </bean> -->
	
	<!-- ========================================配置数据源========================================= -->
    <!-- 配置数据源，使用的是alibaba的Druid(德鲁伊)数据源 -->
    <bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
    	<!-- 根据url自动识别	这一项可配可不配，如果不配置druid会根据url自动识别dbType，然后选择相应的driverClassName(建议配置下) -->
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="0" />
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="20" />
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="20" />
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="0" />
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="60000" />
        <!-- 
        <property name="poolPreparedStatements" value="true" /> 
        <property name="maxPoolPreparedStatementPerConnectionSize" value="33" /> 
        -->
        <property name="validationQuery" value="${validationQuery}" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="testWhileIdle" value="true" />
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="25200000" />
        <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandoned" value="true" />
        <!-- 1800秒，也就是30分钟 -->
        <property name="removeAbandonedTimeout" value="1800" />
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="true" />
        <!-- 监控数据库 -->
        <!-- <property name="filters" value="stat" /> -->
        <property name="filters" value="mergeStat" />
    </bean>
    
    <!-- ========================================分隔线========================================= -->
    
    <!-- ========================================针对myBatis的配置项============================== -->
    <!-- 配置sqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="mapperLocations" value="classpath:com/adee/myproject/mappers/*.xml" />
        <!-- <property name="plugins">
            分页拦截器
            <bean class="com.adee.myproject.mybatis.page.PageInterceptor"></bean>
        </property> -->
    </bean>
    <!-- 配置扫描器 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 扫描me.gacl.dao这个包以及它的子包下的所有映射接口类 -->
        <property name="basePackage" value="com.adee.myproject.mappers" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>
    
    <!-- ========================================分隔线========================================= -->
    <!-- 1.配置事务管理 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 注解方式配置事物 -->
    <!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->

    <!-- 2.配置事务属性 -->
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRED"  isolation="DEFAULT"  rollback-for="com.adee.myproject.exception.ServiceException" timeout="5" read-only="false"/>
            <tx:method name="append*" propagation="REQUIRED"  isolation="DEFAULT"  rollback-for="com.adee.myproject.exception.ServiceException" timeout="5" read-only="false"/>
            <tx:method name="insert*" propagation="REQUIRED"  isolation="DEFAULT"  rollback-for="com.adee.myproject.exception.ServiceException" timeout="5" read-only="false"/>
            <tx:method name="save*" propagation="REQUIRED"  isolation="DEFAULT"  rollback-for="com.adee.myproject.exception.ServiceException" timeout="5" read-only="false"/>
            <tx:method name="update*" propagation="REQUIRED"  isolation="DEFAULT"  rollback-for="com.adee.myproject.exception.ServiceException" timeout="5" read-only="false"/>
            <tx:method name="modify*" propagation="REQUIRED"  isolation="DEFAULT"  rollback-for="com.adee.myproject.exception.ServiceException" timeout="5" read-only="false"/>
            <tx:method name="edit*" propagation="REQUIRED"  isolation="DEFAULT"  rollback-for="com.adee.myproject.exception.ServiceException" timeout="5" read-only="false"/>
            <tx:method name="delete*" propagation="REQUIRED"  isolation="DEFAULT"  rollback-for="com.adee.myproject.exception.ServiceException" timeout="5" read-only="false"/>
            <tx:method name="remove*" propagation="REQUIRED"  isolation="DEFAULT"  rollback-for="com.adee.myproject.exception.ServiceException" timeout="5" read-only="false"/>
            <tx:method name="repair" propagation="REQUIRED"  isolation="DEFAULT"  rollback-for="com.adee.myproject.exception.ServiceException" timeout="5" read-only="false"/>
            <tx:method name="delAndRepair" propagation="REQUIRED"  isolation="DEFAULT"  rollback-for="com.adee.myproject.exception.ServiceException" timeout="5" read-only="false"/>

            <tx:method name="get*" propagation="SUPPORTS"  isolation="DEFAULT"  timeout="5" read-only="true"/>
            <tx:method name="find*" propagation="SUPPORTS"  isolation="DEFAULT"  timeout="5" read-only="true"/>
            <tx:method name="load*" propagation="SUPPORTS"  isolation="DEFAULT"  timeout="5" read-only="true"/>
            <tx:method name="search*" propagation="SUPPORTS"  isolation="DEFAULT"  timeout="5" read-only="true"/>
            <tx:method name="datagrid*" propagation="SUPPORTS"  isolation="DEFAULT"  timeout="5" read-only="true"/>

            <tx:method name="*" propagation="SUPPORTS"  isolation="DEFAULT"  timeout="5" read-only="true"/>
        </tx:attributes>
    </tx:advice>
    
    <!-- 3.配置事务切入点，以及把事务切入点和事务属性关联起来 -->
    <aop:config>
        <aop:pointcut id="transactionPointcut" expression="execution(* com.adee.myproject.service.impl..*Impl.*(..))" />
        <aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice" />
    </aop:config>
    
    <!-- 配置druid监控spring jdbc -->
    <bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">
    </bean>
    <bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut" scope="prototype">
        <property name="patterns">
            <list>
                <value>com.adee.myproject.service.*</value>
            </list>
        </property>
    </bean>
    <aop:config>
        <aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut" />
    </aop:config>	
</beans>  