<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
	xmlns="http://www.springframework.org/schema/beans"   
	xmlns:aop="http://www.springframework.org/schema/aop"  
	xmlns:context="http://www.springframework.org/schema/context"   
	xmlns:tx="http://www.springframework.org/schema/tx"  
	xmlns:cache="http://www.springframework.org/schema/cache"   
	xmlns:p="http://www.springframework.org/schema/p"  
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
	http://www.springframework.org/schema/beans/spring-beans-4.3.xsd  
	http://www.springframework.org/schema/aop  
	http://www.springframework.org/schema/aop/spring-aop-4.3.xsd  
	http://www.springframework.org/schema/context  
	http://www.springframework.org/schema/context/spring-context-4.3.xsd  
	http://www.springframework.org/schema/tx  
	http://www.springframework.org/schema/tx/spring-tx-4.3.xsd  
	http://www.springframework.org/schema/cache   
	http://www.springframework.org/schema/cache/spring-cache-4.3.xsd">  
  	
  	
	<bean id="hw5" abstract="true">
		<property name="name" value="Rose" />
	</bean>

	<context:property-placeholder location="classpath:jdbc.properties" />
	<context:component-scan base-package="com.adee"></context:component-scan>
	
	  
	  <!-- 
		使AspectJ注解@Aspect、@Before、@After注解起作用，即被该注解中切面声明所匹配到的的bean生成代理对象
		@Before("execution(* com.adee.spring4.service.*.*(..))")
	-->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	
	<!-- 
	xml方式配置aop
	
	配置切面bean 
	<bean id="loggingAspect" class="com.adee.spring4.aspect.LoggingAspect"></bean>
	<aop:config>
		配置切点表达式 
		<aop:pointcut expression="execution(public * com.adee.spring4.service.*.*(..))" id="pointCut"/>
		
		 配置切面及通知 
		<aop:aspect ref="loggingAspect" order="1">
			<aop:before method="beforeMethod" pointcut-ref="pointCut"/>
			<aop:after method="afterMethod" pointcut-ref="pointCut"/>
			<aop:after-returning method="afterReturning" pointcut-ref="pointCut"/>
			<aop:after-throwing method="afterThrowing" pointcut-ref="pointCut"/>
		</aop:aspect>
	</aop:config>
	-->
	
	<!-- 
		使用JdbcTemplate
	-->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	     
	   
	<import resource="applicationContext-mybatis.xml"/>
	<import resource="applicationContext-dao.xml"/>
	<import resource="applicationContext-service.xml"/>
</beans>  